{
  "version": "0.3.0",
  "name": "cypher",
  "instructions": [
    {
      "name": "initCypherGroup",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "admin",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "vaultSigner",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "quoteMint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "quoteVault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "rent",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "associatedTokenProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "InitCypherGroupArgs"
          }
        }
      ]
    },
    {
      "name": "initCypherUser",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "cypherUser",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "owner",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "bump",
          "type": "u8"
        }
      ]
    },
    {
      "name": "closeCypherUser",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "cypherUser",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "userSigner",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "We require the account's creator to sign the transaction."
          ]
        }
      ],
      "args": []
    },
    {
      "name": "createCypherUser",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "cypherUser",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "owner",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "bump",
          "type": "u8"
        },
        {
          "name": "accountNumber",
          "type": "u64"
        }
      ]
    },
    {
      "name": "setDelegate",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "cypherUser",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "userSigner",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "We require the account's creator to sign the transaction."
          ]
        },
        {
          "name": "delegate",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "initPythProducts",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "admin",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "pythProducts",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "totalNumProducts",
          "type": "u8"
        },
        {
          "name": "weights",
          "type": {
            "vec": "u16"
          }
        }
      ]
    },
    {
      "name": "addPythProducts",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "admin",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "pythProducts",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "editLiquidityMiningRewards",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cAssetMint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "admin",
          "isMut": false,
          "isSigner": true
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "LiquidityMiningArgs"
          }
        }
      ]
    },
    {
      "name": "cacheOraclePrice",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "pythProducts",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "initDerivativeMarket",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "admin",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "priceHistory",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "pythProducts",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cAssetMint",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "pcMint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "cAssetVault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "dexMarketAuthority",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "vaultSigner",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "dex",
          "accounts": [
            {
              "name": "market",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "reqQ",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "eventQ",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "bids",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "asks",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "coinVault",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "pcVault",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "rent",
              "isMut": false,
              "isSigner": false
            },
            {
              "name": "dexProgram",
              "isMut": false,
              "isSigner": false
            }
          ]
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "InitDerivativeMarketArgs"
          }
        }
      ]
    },
    {
      "name": "initSpotMarket",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "admin",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "pythProducts",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "spotMint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "pcMint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "market",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "spotVault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "vaultSigner",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "InitSpotMarketArgs"
          }
        }
      ]
    },
    {
      "name": "noOpInitOpenOrders",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cypherUser",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "userSigner",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "dexMarket",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "initOoAuthority",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "openOrders",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "rent",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "dexProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "noOpCloseOpenOrders",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cypherUser",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "userSigner",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "dexMarket",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "openOrders",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "dexProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "noOpNewOrderV3",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "vaultSigner",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "priceHistory",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cypherUser",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "userSigner",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "assetMint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "cypherAssetVault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cypherPcVault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "dex",
          "accounts": [
            {
              "name": "market",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "openOrders",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "reqQ",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "eventQ",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "bids",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "asks",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "coinVault",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "pcVault",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "vaultSigner",
              "isMut": false,
              "isSigner": false
            },
            {
              "name": "rent",
              "isMut": false,
              "isSigner": false
            },
            {
              "name": "tokenProgram",
              "isMut": false,
              "isSigner": false
            },
            {
              "name": "dexProgram",
              "isMut": false,
              "isSigner": false
            }
          ]
        }
      ],
      "args": []
    },
    {
      "name": "noOpCancelOrder",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "vaultSigner",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "cypherUser",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "userSigner",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "assetMint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "cypherAssetVault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cypherPcVault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "dex",
          "accounts": [
            {
              "name": "market",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "pruneAuthority",
              "isMut": false,
              "isSigner": false
            },
            {
              "name": "bids",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "asks",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "openOrders",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "eventQ",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "coinVault",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "pcVault",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "vaultSigner",
              "isMut": false,
              "isSigner": false
            },
            {
              "name": "tokenProgram",
              "isMut": false,
              "isSigner": false
            },
            {
              "name": "dexProgram",
              "isMut": false,
              "isSigner": false
            }
          ]
        }
      ],
      "args": []
    },
    {
      "name": "noOpSettleFunds",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "vaultSigner",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "cypherUser",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "userSigner",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "assetMint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "cypherAssetVault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cypherPcVault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "dex",
          "accounts": [
            {
              "name": "market",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "openOrders",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "coinVault",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "pcVault",
              "isMut": true,
              "isSigner": false
            },
            {
              "name": "vaultSigner",
              "isMut": false,
              "isSigner": false
            },
            {
              "name": "tokenProgram",
              "isMut": false,
              "isSigner": false
            },
            {
              "name": "dexProgram",
              "isMut": false,
              "isSigner": false
            }
          ]
        }
      ],
      "args": []
    },
    {
      "name": "updateMarketExpirationTime",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "admin",
          "isMut": false,
          "isSigner": true
        }
      ],
      "args": [
        {
          "name": "cAssetMint",
          "type": "publicKey"
        },
        {
          "name": "expirationTs",
          "type": "u64"
        }
      ]
    },
    {
      "name": "executeMarket",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "admin",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "dexMarket",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "eventQ",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "cAssetMint",
          "type": "publicKey"
        }
      ]
    },
    {
      "name": "closeMarket",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "admin",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "feeReceiver",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "vaultSigner",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "priceHistory",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "pythProducts",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "assetMint",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cypherAssetVault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cypherPcVault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "activateMarket",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "spotMint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "cAssetMint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "spotVault",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "cAssetVault",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "spotMarket",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "cAssetMarket",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "admin",
          "isMut": false,
          "isSigner": true
        }
      ],
      "args": []
    },
    {
      "name": "depositDerivativeDeliverable",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "userSigner",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "cypherAssetVault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "spotMint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "assetMint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "depositFrom",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "depositCollateral",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cypherUser",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "userSigner",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "cypherAssetVault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "spotMint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "depositFrom",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "withdrawCollateral",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "vaultSigner",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "cypherUser",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "userSigner",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "We require the account's creator to sign the transaction."
          ]
        },
        {
          "name": "cypherAssetVault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "assetMint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "withdrawTo",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "liquidateDerivativeCollateral",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cypherUser",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "userSigner",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "liqeeCypherUser",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "assetMint",
          "type": "publicKey"
        },
        {
          "name": "liabMint",
          "type": "publicKey"
        }
      ]
    },
    {
      "name": "liquidateSpotCollateral",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cypherUser",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "userSigner",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "liqeeCypherUser",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "assetMint",
          "type": "publicKey"
        },
        {
          "name": "liabMint",
          "type": "publicKey"
        }
      ]
    },
    {
      "name": "settlePosition",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cypherUser",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cAssetMint",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "updateTokenIndex",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenMint",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "sweepFee",
      "accounts": [
        {
          "name": "cypherGroup",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "admin",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "vaultSigner",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "cypherAssetVault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "assetMint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "withdrawTo",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    }
  ],
  "accounts": [
    {
      "name": "CypherGroup",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "vaultSignerBumpSeed",
            "docs": [
              "bump seed value for vault_signer pda."
            ],
            "type": {
              "array": [
                "u8",
                1
              ]
            }
          },
          {
            "name": "padding1",
            "type": {
              "array": [
                "u8",
                15
              ]
            }
          },
          {
            "name": "selfAddress",
            "docs": [
              "address of this cypher group account."
            ],
            "type": "publicKey"
          },
          {
            "name": "admin",
            "docs": [
              "admin who has permission to perform administrative ixs for this group."
            ],
            "type": "publicKey"
          },
          {
            "name": "vaultSigner",
            "docs": [
              "signer pda for group owned vaults."
            ],
            "type": "publicKey"
          },
          {
            "name": "feeMint",
            "docs": [
              "the fee mint"
            ],
            "type": "publicKey"
          },
          {
            "name": "insuranceFund",
            "docs": [
              "global insurance fund."
            ],
            "type": "i128"
          },
          {
            "name": "markets",
            "docs": [
              "array of markets data."
            ],
            "type": {
              "array": [
                {
                  "defined": "CypherMarket"
                },
                23
              ]
            }
          },
          {
            "name": "tokens",
            "docs": [
              "array of tokens data."
            ],
            "type": {
              "array": [
                {
                  "defined": "CypherToken"
                },
                24
              ]
            }
          },
          {
            "name": "config",
            "docs": [
              "group config set by admin."
            ],
            "type": {
              "defined": "CypherGroupConfig"
            }
          },
          {
            "name": "protocolFee",
            "docs": [
              "protocol fee collected ."
            ],
            "type": "u64"
          },
          {
            "name": "padding2",
            "type": {
              "array": [
                "u64",
                1
              ]
            }
          },
          {
            "name": "padding3",
            "type": {
              "array": [
                "u64",
                8
              ]
            }
          }
        ]
      }
    },
    {
      "name": "PriceHistory",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "cypherGroup",
            "docs": [
              "group address of market this price history is for."
            ],
            "type": "publicKey"
          },
          {
            "name": "assetMint",
            "docs": [
              "c_asset_mint address of market this price history is for."
            ],
            "type": "publicKey"
          },
          {
            "name": "data",
            "docs": [
              "array of price infos."
            ],
            "type": {
              "array": [
                {
                  "defined": "PriceWithTs"
                },
                14400
              ]
            }
          },
          {
            "name": "config",
            "type": {
              "defined": "PriceHistoryConfig"
            }
          },
          {
            "name": "longerHead",
            "docs": [
              "head of prices for longer time horizon."
            ],
            "type": "u16"
          },
          {
            "name": "shorterHead",
            "docs": [
              "head of prices for shorter time horizon."
            ],
            "type": "u16"
          },
          {
            "name": "tail",
            "docs": [
              "tail of prices(most recently added price)."
            ],
            "type": "u16"
          },
          {
            "name": "padding1",
            "type": "u16"
          },
          {
            "name": "padding2",
            "type": {
              "array": [
                "u64",
                8
              ]
            }
          }
        ]
      }
    },
    {
      "name": "PythProducts",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "cypherGroup",
            "type": "publicKey"
          },
          {
            "name": "assetMint",
            "type": "publicKey"
          },
          {
            "name": "spotMint",
            "type": "publicKey"
          },
          {
            "name": "products",
            "type": {
              "vec": {
                "array": [
                  "u8",
                  32
                ]
              }
            }
          },
          {
            "name": "weights",
            "type": {
              "vec": "u16"
            }
          }
        ]
      }
    },
    {
      "name": "CypherUser",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "authorityBumpSeed",
            "docs": [
              "signer bump used to derive cypher_user address from user's signer wallet address."
            ],
            "type": {
              "array": [
                "u8",
                1
              ]
            }
          },
          {
            "name": "usesAccountNumber",
            "docs": [
              "whether the account was created using an account number or not",
              "this allows a user or program to create multiple accounts with a single address"
            ],
            "type": "bool"
          },
          {
            "name": "padding1",
            "type": {
              "array": [
                "u8",
                6
              ]
            }
          },
          {
            "name": "padding2",
            "type": {
              "array": [
                "u64",
                3
              ]
            }
          },
          {
            "name": "accountNumberSeed",
            "type": {
              "array": [
                "u8",
                8
              ]
            }
          },
          {
            "name": "padding3",
            "type": {
              "array": [
                "u64",
                3
              ]
            }
          },
          {
            "name": "cypherGroup",
            "docs": [
              "address of cypher group account this user belongs to."
            ],
            "type": "publicKey"
          },
          {
            "name": "userSigner",
            "docs": [
              "user's signer wallet."
            ],
            "type": "publicKey"
          },
          {
            "name": "delegate",
            "docs": [
              "the user's delegate account"
            ],
            "type": "publicKey"
          },
          {
            "name": "positions",
            "docs": [
              "user's futures positions in the margin account."
            ],
            "type": {
              "array": [
                {
                  "defined": "UserPosition"
                },
                24
              ]
            }
          },
          {
            "name": "padding4",
            "type": {
              "array": [
                "u64",
                40
              ]
            }
          }
        ]
      }
    }
  ],
  "types": [
    {
      "name": "LiquidityMiningArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "rate",
            "docs": [
              "the rate that is used to convert liquidity points to the LM reward token"
            ],
            "type": "i128"
          },
          {
            "name": "maxDepthBps",
            "docs": [
              "max depth on the book in bps"
            ],
            "type": "i128"
          },
          {
            "name": "periodStart",
            "docs": [
              "timestamp of the start of the liquidity mining incentive period"
            ],
            "type": "u64"
          },
          {
            "name": "targetPeriodLength",
            "docs": [
              "target time length for a liquidity mining period"
            ],
            "type": "u64"
          },
          {
            "name": "tokensLeft",
            "docs": [
              "tokens left for this period."
            ],
            "type": "u64"
          },
          {
            "name": "tokensPerPeriod",
            "docs": [
              "total amount of tokens allocated for a given period"
            ],
            "type": "u64"
          },
          {
            "name": "tokenMint",
            "docs": [
              "the token mint of the token being used for rewards"
            ],
            "type": "publicKey"
          },
          {
            "name": "minRateAdj",
            "docs": [
              "the minimum rate adjustment"
            ],
            "type": "u64"
          },
          {
            "name": "maxRateAdj",
            "docs": [
              "the maximum rate adjusment"
            ],
            "type": "u64"
          },
          {
            "name": "sizeCutoff",
            "docs": [
              "the size cut off for rewards"
            ],
            "type": "u64"
          },
          {
            "name": "tokenDecimals",
            "docs": [
              "the decimals of the token being rewarded"
            ],
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "InitCypherGroupArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "marginInitRatio",
            "type": "u16"
          },
          {
            "name": "marginMaintRatio",
            "type": "u16"
          },
          {
            "name": "marginPartialRatio",
            "type": "u16"
          },
          {
            "name": "liquidatorBonusBps",
            "type": "u16"
          },
          {
            "name": "liquidationInsuranceFeeBps",
            "type": "u16"
          },
          {
            "name": "makerFeeBps",
            "type": "u16"
          },
          {
            "name": "takerFeeBps",
            "type": "u16"
          },
          {
            "name": "feePercentageForProtocol",
            "type": "u8"
          },
          {
            "name": "feePercentageForInsuranceFund",
            "type": "u8"
          },
          {
            "name": "quoteTokenOptimalUtil",
            "type": "u16"
          },
          {
            "name": "quoteTokenOptimalApr",
            "type": "u16"
          },
          {
            "name": "quoteTokenMaxApr",
            "type": "u16"
          },
          {
            "name": "quoteTokenDecimals",
            "type": "u8"
          },
          {
            "name": "vaultSignerBump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "InitDerivativeMarketArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "marketType",
            "type": {
              "defined": "MarketType"
            }
          },
          {
            "name": "deliveryType",
            "type": {
              "defined": "DeliveryType"
            }
          },
          {
            "name": "marketExpiresAt",
            "type": "u64"
          },
          {
            "name": "tokenSupply",
            "type": "u64"
          },
          {
            "name": "tokenDecimals",
            "type": "u8"
          },
          {
            "name": "marketIndex",
            "type": "u8"
          },
          {
            "name": "pythProductsAvailable",
            "type": "bool"
          },
          {
            "name": "twapLongerTimeHorizon",
            "type": "u64"
          },
          {
            "name": "twapShorterTimeHorizon",
            "type": "u64"
          },
          {
            "name": "twapPriceCollectionTick",
            "type": "u64"
          },
          {
            "name": "vaultSignerBump",
            "type": "u8"
          },
          {
            "name": "dexMarketAuthorityBump",
            "type": "u8"
          },
          {
            "name": "dexVaultSignerNonce",
            "type": "u64"
          },
          {
            "name": "dexCoinLotSize",
            "type": "u64"
          },
          {
            "name": "dexPcLotSize",
            "type": "u64"
          },
          {
            "name": "dexPcDustThreshold",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "InitSpotMarketArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "marketIndex",
            "type": "u8"
          },
          {
            "name": "tokenDecimals",
            "type": "u8"
          },
          {
            "name": "tokenOptimalUtil",
            "type": "u16"
          },
          {
            "name": "tokenOptimalApr",
            "type": "u16"
          },
          {
            "name": "tokenMaxApr",
            "type": "u16"
          },
          {
            "name": "vaultSignerBump",
            "type": "u8"
          },
          {
            "name": "dexVaultSignerNonce",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "CypherGroupConfig",
      "docs": [
        "This config defines the margin ratios for the whole group, as well as the fees for liquidators and the protocol."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "marginInitRatio",
            "docs": [
              "minimum c-ratio for a margin account to be considered healthy and able to borrow, trade or withdraw."
            ],
            "type": "u16"
          },
          {
            "name": "marginMaintRatio",
            "docs": [
              "minimum c-ratio for a margin account before liquidation."
            ],
            "type": "u16"
          },
          {
            "name": "marginPartialRatio",
            "docs": [
              "margin account partial liquidation target c-ratio."
            ],
            "type": "u16"
          },
          {
            "name": "liquidatorBonusBps",
            "docs": [
              "liquidator bonus based on repay value."
            ],
            "type": "u16"
          },
          {
            "name": "liquidationInsuranceFeeBps",
            "docs": [
              "liquidation fee for insurance fund based on repay value."
            ],
            "type": "u16"
          },
          {
            "name": "padding1",
            "type": {
              "array": [
                "u16",
                3
              ]
            }
          },
          {
            "name": "feePercentageForProtocol",
            "docs": [
              "fee for protocol"
            ],
            "type": "u8"
          },
          {
            "name": "feePercentageForInsuranceFund",
            "docs": [
              "fee for insurance fund"
            ],
            "type": "u8"
          },
          {
            "name": "padding2",
            "type": {
              "array": [
                "u8",
                6
              ]
            }
          },
          {
            "name": "padding3",
            "type": {
              "array": [
                "u64",
                1
              ]
            }
          }
        ]
      }
    },
    {
      "name": "CypherMarket",
      "docs": [
        "This structure represents a market, it can be a spot market, a derivatives market, or both.",
        "It holds the necessary information for the market to operate, these being the oracle price and",
        "any and all information related to the derivatives market or the spot market."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "pythProducts",
            "docs": [
              "pyth products account address."
            ],
            "type": "publicKey"
          },
          {
            "name": "oraclePrice",
            "docs": [
              "oracle price for the underlying token"
            ],
            "type": {
              "defined": "OraclePrice"
            }
          },
          {
            "name": "padding1",
            "type": {
              "array": [
                "u64",
                2
              ]
            }
          },
          {
            "name": "derivativeInfo",
            "docs": [
              "information about the derivatives market"
            ],
            "type": {
              "defined": "DerivativesMarketInfo"
            }
          },
          {
            "name": "spotInfo",
            "docs": [
              "information about the spot market"
            ],
            "type": {
              "defined": "SpotMarketInfo"
            }
          },
          {
            "name": "liquidityMiningInfo",
            "docs": [
              "the liquditiy mining info for the derivatives market"
            ],
            "type": {
              "defined": "LiquidityMiningInfo"
            }
          }
        ]
      }
    },
    {
      "name": "LiquidityMiningInfo",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "tokenMint",
            "docs": [
              "the token mint of the token being used for rewards"
            ],
            "type": "publicKey"
          },
          {
            "name": "rate",
            "docs": [
              "the rate that is used to convert liquidity points to the LM reward token"
            ],
            "type": "i128"
          },
          {
            "name": "maxDepthBps",
            "docs": [
              "max depth on the book in bps"
            ],
            "type": "i128"
          },
          {
            "name": "periodStart",
            "docs": [
              "timestamp of the start of the liquidity mining incentive period"
            ],
            "type": "u64"
          },
          {
            "name": "targetPeriodLength",
            "docs": [
              "target time length for a liquidity mining period"
            ],
            "type": "u64"
          },
          {
            "name": "tokensLeft",
            "docs": [
              "tokens left for this period."
            ],
            "type": "u64"
          },
          {
            "name": "tokensPerPeriod",
            "docs": [
              "total amount of tokens allocated for a given period"
            ],
            "type": "u64"
          },
          {
            "name": "minRateAdj",
            "docs": [
              "the minimum rate adjustment"
            ],
            "type": "u64"
          },
          {
            "name": "maxRateAdj",
            "docs": [
              "the maximum rate adjusment"
            ],
            "type": "u64"
          },
          {
            "name": "sizeCutoff",
            "docs": [
              "the size cut off for rewards"
            ],
            "type": "u64"
          },
          {
            "name": "tokenDecimals",
            "docs": [
              "the decimals of the token being rewarded"
            ],
            "type": "u8"
          },
          {
            "name": "padding1",
            "type": {
              "array": [
                "u8",
                7
              ]
            }
          }
        ]
      }
    },
    {
      "name": "DerivativesMarketInfo",
      "docs": [
        "This structure holds information about the derivative market of the underlying token.",
        "This market is a Serum permissioned market, therefore it is only active between the `listed_at`",
        "and `expires_at` timestamps. It also holds information about the Pyth products used,",
        "current open positions on the market as well as the current market price and the market's price history (TWAP)."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "dexMarketAuthorityBumpSeed",
            "docs": [
              "bump seed value used to generate market_authority pda"
            ],
            "type": {
              "array": [
                "u8",
                1
              ]
            }
          },
          {
            "name": "marketType",
            "type": {
              "defined": "MarketType"
            }
          },
          {
            "name": "deliveryType",
            "docs": [
              "the delivery type of the market upon execution and settlement"
            ],
            "type": {
              "defined": "DeliveryType"
            }
          },
          {
            "name": "isExecuted",
            "docs": [
              "whether this market has been executed"
            ],
            "type": "bool"
          },
          {
            "name": "isActive",
            "docs": [
              "whether the market is active",
              "i.e a physical delivery market should only be activated after equivalent amount of spot tokens",
              "have been deposited to the spot vault"
            ],
            "type": "bool"
          },
          {
            "name": "padding1",
            "type": {
              "array": [
                "u8",
                3
              ]
            }
          },
          {
            "name": "dexMarket",
            "docs": [
              "serum futures market address."
            ],
            "type": "publicKey"
          },
          {
            "name": "priceHistory",
            "docs": [
              "price_history account address."
            ],
            "type": "publicKey"
          },
          {
            "name": "marketPrice",
            "docs": [
              "twap"
            ],
            "type": "u64"
          },
          {
            "name": "positionsCount",
            "docs": [
              "number of positions in this market."
            ],
            "type": "u64"
          },
          {
            "name": "listedAt",
            "docs": [
              "when this market was listed"
            ],
            "type": "u64"
          },
          {
            "name": "expiresAt",
            "docs": [
              "when this market expires"
            ],
            "type": "u64"
          },
          {
            "name": "padding2",
            "docs": [
              "the market market type"
            ],
            "type": {
              "array": [
                "u8",
                8
              ]
            }
          },
          {
            "name": "padding3",
            "docs": [
              "the market market type"
            ],
            "type": {
              "array": [
                "u64",
                2
              ]
            }
          }
        ]
      }
    },
    {
      "name": "SpotMarketInfo",
      "docs": [
        "This structure holds information about the spot market of the underlying token"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "spotMarket",
            "docs": [
              "serum spot market address."
            ],
            "type": "publicKey"
          },
          {
            "name": "padding",
            "type": {
              "array": [
                "u64",
                4
              ]
            }
          }
        ]
      }
    },
    {
      "name": "OraclePrice",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "price",
            "type": "u64"
          },
          {
            "name": "cachedSlot",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "CypherToken",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "cAssetMint",
            "docs": [
              "cAsset or usdc token mint address."
            ],
            "type": "publicKey"
          },
          {
            "name": "cAssetVault",
            "docs": [
              "cypher token vault address."
            ],
            "type": "publicKey"
          },
          {
            "name": "spotMint",
            "docs": [
              "spot market token mint address."
            ],
            "type": "publicKey"
          },
          {
            "name": "spotVault",
            "docs": [
              "spot token vault address"
            ],
            "type": "publicKey"
          },
          {
            "name": "derivBaseDeposits",
            "docs": [
              "deposit amount."
            ],
            "type": "i128"
          },
          {
            "name": "derivBaseBorrows",
            "docs": [
              "borrow amount."
            ],
            "type": "i128"
          },
          {
            "name": "spotBaseDeposits",
            "docs": [
              "index denominated deposit amount."
            ],
            "type": "i128"
          },
          {
            "name": "spotBaseBorrows",
            "docs": [
              "index denominated borrow amount."
            ],
            "type": "i128"
          },
          {
            "name": "depositIndex",
            "docs": [
              "deposit index."
            ],
            "type": "i128"
          },
          {
            "name": "borrowIndex",
            "docs": [
              "borrow index."
            ],
            "type": "i128"
          },
          {
            "name": "accumDepositInterestPayment",
            "docs": [
              "accumulated deposit interest payments denominated in quote currency."
            ],
            "type": "i128"
          },
          {
            "name": "accumBorrowInterestPayment",
            "docs": [
              "accumulated borrow interest payments denominated in quote currency."
            ],
            "type": "i128"
          },
          {
            "name": "accumBorrows",
            "docs": [
              "accumulated borrows"
            ],
            "type": "i128"
          },
          {
            "name": "accumRepays",
            "docs": [
              "accumulated repays"
            ],
            "type": "i128"
          },
          {
            "name": "config",
            "docs": [
              "admin modifiable token configs."
            ],
            "type": {
              "defined": "CypherTokenConfig"
            }
          },
          {
            "name": "padding",
            "type": {
              "array": [
                "u64",
                2
              ]
            }
          },
          {
            "name": "indexUpdatedAt",
            "docs": [
              "index updated at."
            ],
            "type": "u64"
          },
          {
            "name": "padding2",
            "type": {
              "array": [
                "u64",
                1
              ]
            }
          }
        ]
      }
    },
    {
      "name": "CypherTokenConfig",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "optimalUtil",
            "docs": [
              "optimal utilization ratio for this token(lending pool)."
            ],
            "type": "u16"
          },
          {
            "name": "optimalApr",
            "docs": [
              "optimal apr for this token(lending pool)."
            ],
            "type": "u16"
          },
          {
            "name": "maxApr",
            "docs": [
              "maximum apr for this token(lending pool)."
            ],
            "type": "u16"
          },
          {
            "name": "padding",
            "type": {
              "array": [
                "u8",
                2
              ]
            }
          },
          {
            "name": "decimals",
            "docs": [
              "spl token decimals of the futures token mint"
            ],
            "type": "u8"
          },
          {
            "name": "spotDecimals",
            "docs": [
              "spl token decimals of the spot token mint"
            ],
            "type": "u8"
          },
          {
            "name": "padding2",
            "type": {
              "array": [
                "u8",
                6
              ]
            }
          }
        ]
      }
    },
    {
      "name": "PriceHistoryConfig",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "longerTimeHorizon",
            "type": "u64"
          },
          {
            "name": "shorterTimeHorizon",
            "type": "u64"
          },
          {
            "name": "priceCollectionTick",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "PriceWithTs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "price",
            "type": "u64"
          },
          {
            "name": "timestamp",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "UserPosition",
      "docs": [
        "User's position in a margin account, these are related to futures positions and not related to assets held spot."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "spotBaseDeposits",
            "docs": [
              "keep track of deposit amount denominated by deposit index for all tokens."
            ],
            "type": "i128"
          },
          {
            "name": "spotBaseBorrows",
            "docs": [
              "keep track of borrow amount denominated by borrow index for all tokens."
            ],
            "type": "i128"
          },
          {
            "name": "derivBaseDeposits",
            "docs": [
              "keep track of deposit amount for futures markets."
            ],
            "type": "i128"
          },
          {
            "name": "derivBaseBorrows",
            "docs": [
              "keep track of borrow amount for futures markets."
            ],
            "type": "i128"
          },
          {
            "name": "derivOoInfo",
            "docs": [
              "serum's open orders account information for the user in the futures market."
            ],
            "type": {
              "defined": "OpenOrdersInfo"
            }
          },
          {
            "name": "spotOoInfo",
            "docs": [
              "serum's open orders account information for the user in the spot market."
            ],
            "type": {
              "defined": "OpenOrdersInfo"
            }
          },
          {
            "name": "marketIdx",
            "docs": [
              "index of this market from group."
            ],
            "type": "u8"
          },
          {
            "name": "padding",
            "type": {
              "array": [
                "u8",
                7
              ]
            }
          },
          {
            "name": "lmRewardsAccrued",
            "docs": [
              "the amount of liquidity mining rewards accrued on this market"
            ],
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "OpenOrdersInfo",
      "docs": [
        "Keep track of serum's OpenOrders account to calculate margin account c-ratio",
        "without passing OpenOrders accounts for every single markets.",
        "Quantities in this struct is native quantities(not need to multiply lot sizes).",
        "This is updated in the permission market middleware."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "coinTotal",
            "type": "u64"
          },
          {
            "name": "coinFree",
            "type": "u64"
          },
          {
            "name": "pcTotal",
            "type": "u64"
          },
          {
            "name": "pcFree",
            "type": "u64"
          },
          {
            "name": "referrerRebatesAccrued",
            "type": "u64"
          },
          {
            "name": "isAccountOpen",
            "docs": [
              "If the user has OpenOrders account open."
            ],
            "type": "bool"
          },
          {
            "name": "padding",
            "type": {
              "array": [
                "u8",
                7
              ]
            }
          }
        ]
      }
    },
    {
      "name": "MarketType",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "PairFuture"
          },
          {
            "name": "IndexFuture"
          }
        ]
      }
    },
    {
      "name": "DeliveryType",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "CashSettled"
          },
          {
            "name": "PhysicalDelivery"
          }
        ]
      }
    }
  ],
  "events": [
    {
      "name": "MarketActionLog",
      "fields": [
        {
          "name": "cypherGroup",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "spotMint",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "cAssetMint",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "admin",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "action",
          "type": "u8",
          "index": false
        }
      ]
    },
    {
      "name": "UserAccountActionLog",
      "fields": [
        {
          "name": "cypherGroup",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "cypherUser",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "owner",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "action",
          "type": "u8",
          "index": false
        }
      ]
    },
    {
      "name": "DepositOrWithdrawLog",
      "fields": [
        {
          "name": "cypherGroup",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "cypherUser",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "spotMint",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "isDeposit",
          "type": "bool",
          "index": false
        },
        {
          "name": "amount",
          "type": "u64",
          "index": false
        }
      ]
    },
    {
      "name": "OrderFillLog",
      "fields": [
        {
          "name": "cypherGroup",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "cypherUser",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "assetMint",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "isTaker",
          "type": "bool",
          "index": false
        },
        {
          "name": "isBid",
          "type": "bool",
          "index": false
        },
        {
          "name": "clientOrderId",
          "type": "u64",
          "index": false
        },
        {
          "name": "coinQty",
          "type": "u64",
          "index": false
        },
        {
          "name": "pcQty",
          "type": "u64",
          "index": false
        },
        {
          "name": "isSpot",
          "type": "bool",
          "index": false
        }
      ]
    },
    {
      "name": "SettlePositionLog",
      "fields": [
        {
          "name": "cypherGroup",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "cypherUser",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "cAssetMint",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "deposits",
          "type": "i128",
          "index": false
        },
        {
          "name": "borrows",
          "type": "i128",
          "index": false
        },
        {
          "name": "executionPrice",
          "type": "i128",
          "index": false
        }
      ]
    },
    {
      "name": "LiquidateMarginCollateralLog",
      "fields": [
        {
          "name": "cypherGroup",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "liqeeUser",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "liqorUser",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "assetMint",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "liabMint",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "assetPrice",
          "type": "u64",
          "index": false
        },
        {
          "name": "liabPrice",
          "type": "u64",
          "index": false
        },
        {
          "name": "preAssetDeposits",
          "type": "i128",
          "index": false
        },
        {
          "name": "preLiabBorrows",
          "type": "i128",
          "index": false
        },
        {
          "name": "postAssetDeposits",
          "type": "i128",
          "index": false
        },
        {
          "name": "postLiabBorrows",
          "type": "i128",
          "index": false
        }
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "InvalidArgument",
      "msg": "invalid argument provided"
    },
    {
      "code": 6001,
      "name": "InvalidAdmin",
      "msg": "invalid admin"
    },
    {
      "code": 6002,
      "name": "InvalidFlag",
      "msg": "invalid flag"
    },
    {
      "code": 6003,
      "name": "InvalidOracle",
      "msg": "invalid oracle account provided"
    },
    {
      "code": 6004,
      "name": "InvalidPythProducts",
      "msg": "invalid pyth products"
    },
    {
      "code": 6005,
      "name": "InvalidDeliveryType",
      "msg": "invalid delivery type for specified market"
    },
    {
      "code": 6006,
      "name": "InvalidMarkets",
      "msg": "invalid market pubkeys"
    },
    {
      "code": 6007,
      "name": "InsufficientBalanceForPhysicalDelivery",
      "msg": "insufficient vault balance for physical delivery market"
    },
    {
      "code": 6008,
      "name": "PythConfidenceNotAcceptable",
      "msg": "pyth conf not acceptable"
    },
    {
      "code": 6009,
      "name": "PythPriceStatusNotTrading",
      "msg": "pyth conf not acceptable"
    },
    {
      "code": 6010,
      "name": "StaleOraclePrice",
      "msg": "stale oracle price"
    },
    {
      "code": 6011,
      "name": "UnableToFindTokenOrMarket",
      "msg": "unable to find token or market from cypher group"
    },
    {
      "code": 6012,
      "name": "UnableToFindPosition",
      "msg": "unable to find position from cypher user"
    },
    {
      "code": 6013,
      "name": "UnableToClosePosition",
      "msg": "unable to close position"
    },
    {
      "code": 6014,
      "name": "UnableToExecuteMarket",
      "msg": "unable to execute market"
    },
    {
      "code": 6015,
      "name": "EventQueueNotEmpty",
      "msg": "event queue not empty"
    },
    {
      "code": 6016,
      "name": "InsufficientExecutionFund",
      "msg": "not enough execution fund"
    },
    {
      "code": 6017,
      "name": "UnableToDelistMarket",
      "msg": "unable to delist market"
    },
    {
      "code": 6018,
      "name": "UnableToDelistToken",
      "msg": "unable to delist token"
    },
    {
      "code": 6019,
      "name": "ReachedMaxMarkets",
      "msg": "reached max markets"
    },
    {
      "code": 6020,
      "name": "MarketNotActive",
      "msg": "market is not active"
    },
    {
      "code": 6021,
      "name": "MarketNotExecuted",
      "msg": "market is not executed"
    },
    {
      "code": 6022,
      "name": "OpenOrdersNotOpen",
      "msg": "open orders account is not open"
    },
    {
      "code": 6023,
      "name": "CRatioBelowOptimal",
      "msg": "c-ratio is below optimal"
    },
    {
      "code": 6024,
      "name": "BorrowsGreaterThanDeposits",
      "msg": "market total borrows amount is greater than total deposits"
    },
    {
      "code": 6025,
      "name": "OrderAmountExceedsVaultBalance",
      "msg": "order amount exceeds balance of the corresponding vault"
    },
    {
      "code": 6026,
      "name": "InvalidLiquidation",
      "msg": "tried to liquidate a healthy position"
    },
    {
      "code": 6027,
      "name": "InvalidSigner",
      "msg": "invalid signer for the provided cypher user"
    },
    {
      "code": 6028,
      "name": "DelegateMustDiffer",
      "msg": "desired delegate must be different than current delegate"
    },
    {
      "code": 6029,
      "name": "AccountHasQuoteTokenDepositsOrBorrows",
      "msg": "tried to close an account with quote token deposits or borrows"
    },
    {
      "code": 6030,
      "name": "AccountHasOutstandingPositions",
      "msg": "tried to close an account with outstanding positions"
    },
    {
      "code": 6031,
      "name": "AccountHasOpenOrders",
      "msg": "tried to close an account with remaining open orders"
    },
    {
      "code": 6032,
      "name": "AccountHasUnclosedOpenOrdersAccounts",
      "msg": "tried to close an account with unclosed open orders accounts"
    },
    {
      "code": 6033,
      "name": "Default",
      "msg": "Default"
    }
  ]
}